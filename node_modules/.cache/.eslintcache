[{"/Users/a./Downloads/coding/pre-onboarding/client/src/index.js":"1","/Users/a./Downloads/coding/pre-onboarding/client/src/reportWebVitals.js":"2","/Users/a./Downloads/coding/pre-onboarding/client/src/App.js":"3","/Users/a./Downloads/coding/pre-onboarding/client/src/components/pages/HomePage.jsx":"4","/Users/a./Downloads/coding/pre-onboarding/client/src/components/pages/SigninPage.jsx":"5","/Users/a./Downloads/coding/pre-onboarding/client/src/components/pages/SignupPage.jsx":"6","/Users/a./Downloads/coding/pre-onboarding/client/src/components/pages/TodoPage.jsx":"7","/Users/a./Downloads/coding/pre-onboarding/client/src/components/TodoList.jsx":"8"},{"size":535,"mtime":1680245150133,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1680242227995,"results":"11","hashOfConfig":"10"},{"size":699,"mtime":1680344614232,"results":"12","hashOfConfig":"10"},{"size":348,"mtime":1681885577831,"results":"13","hashOfConfig":"10"},{"size":2691,"mtime":1681885425479,"results":"14","hashOfConfig":"10"},{"size":2495,"mtime":1681885405203,"results":"15","hashOfConfig":"10"},{"size":2089,"mtime":1681885538683,"results":"16","hashOfConfig":"10"},{"size":3034,"mtime":1681885556408,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},"1dy0gzr",{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"21"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/a./Downloads/coding/pre-onboarding/client/src/index.js",[],[],[],"/Users/a./Downloads/coding/pre-onboarding/client/src/reportWebVitals.js",[],[],"/Users/a./Downloads/coding/pre-onboarding/client/src/App.js",[],[],"/Users/a./Downloads/coding/pre-onboarding/client/src/components/pages/HomePage.jsx",["47"],[],"import { useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nfunction HomePage() {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const path = location.pathname;\n\n  useEffect(() => {\n    if (path === \"/\") {\n      navigate(\"/signin\");\n    }\n  }, []);\n\n  return;\n}\n\nexport default HomePage;\n","/Users/a./Downloads/coding/pre-onboarding/client/src/components/pages/SigninPage.jsx",["48"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\n\nfunction SigninPage() {\n  const navigate = useNavigate();\n  const [loginInfo, setLoginInfo] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [dis, setDis] = useState({\n    email: false,\n    password: false,\n  });\n\n  const emailCheck = (e) => {\n    if (e.target.value.match(/@/)) {\n      setDis({ ...dis, email: true });\n    } else {\n      setDis({ ...dis, email: false });\n    }\n  };\n\n  const passwordCheck = (e) => {\n    if (e.target.value.length >= 8) {\n      setDis({ ...dis, password: true });\n    } else {\n      setDis({ ...dis, password: false });\n    }\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"access_token\")) {\n      navigate(\"/todo\");\n    }\n  }, []);\n\n  const loginHandler = async (e) => {\n    e.preventDefault();\n    await axios\n      .post(\"https://www.pre-onboarding-selection-task.shop/auth/signin\", {\n        email: loginInfo.email,\n        password: loginInfo.password,\n      })\n      .then((res) => {\n        if (res.status === 200) {\n          localStorage.setItem(\"access_token\", res.data.access_token);\n          navigate(\"/todo\");\n        }\n      });\n  };\n\n  return (\n    <div className=\"flex flex-col items-center mt-10\">\n      <h1 className=\"mb-4 text-2xl\">로그인</h1>\n      <form className=\"flex flex-col items-center\">\n        <label>\n          <span>이메일 : </span>\n          <input\n            value={loginInfo.email}\n            onChange={(e) => {\n              setLoginInfo({ ...loginInfo, email: e.target.value });\n              emailCheck(e);\n            }}\n            type=\"email\"\n            data-testid=\"email-input\"\n            className=\"w-40 mb-2 ml-3 border\"\n          />\n        </label>\n        <label>\n          <span>비밀번호 : </span>\n          <input\n            value={loginInfo.password}\n            onChange={(e) => {\n              setLoginInfo({ ...loginInfo, password: e.target.value });\n              passwordCheck(e);\n            }}\n            data-testid=\"password-input\"\n            type=\"password\"\n            className=\"w-40 border\"\n          />\n        </label>\n        <button\n          data-testid=\"signin-button\"\n          disabled={!(dis.email && dis.password)}\n          type=\"submit\"\n          onClick={loginHandler}\n          className=\"mt-4 bg-blue-500 w-36 disabled:bg-gray-400\"\n        >\n          로그인\n        </button>\n        <Link\n          to=\"/signup\"\n          type=\"button\"\n          className=\"mt-4 text-center bg-green-400 w-36\"\n        >\n          회원가입하기\n        </Link>\n      </form>\n    </div>\n  );\n}\n\nexport default SigninPage;\n","/Users/a./Downloads/coding/pre-onboarding/client/src/components/pages/SignupPage.jsx",["49"],[],"import { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\nfunction SigninPage() {\n  const navigate = useNavigate();\n  const [loginInfo, setLoginInfo] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const [dis, setDis] = useState({\n    email: false,\n    password: false,\n  });\n\n  const emailCheck = (e) => {\n    if (e.target.value.match(/@/)) {\n      setDis({ ...dis, email: true });\n    } else {\n      setDis({ ...dis, email: false });\n    }\n  };\n\n  const passwordCheck = (e) => {\n    if (e.target.value.length >= 8) {\n      setDis({ ...dis, password: true });\n    } else {\n      setDis({ ...dis, password: false });\n    }\n  };\n\n  const signinHandler = (e) => {\n    e.preventDefault();\n    axios\n      .post(\"https://www.pre-onboarding-selection-task.shop/auth/signup\", {\n        email: loginInfo.email,\n        password: loginInfo.password,\n      })\n      .then((res) => {\n        if (res.status === 201) {\n          navigate(\"/signin\");\n        }\n      })\n      .catch((err) => alert(err.response.data.message));\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"access_token\")) {\n      navigate(\"/todo\");\n    }\n  }, []);\n\n  return (\n    <div className=\"flex flex-col items-center mt-10\">\n      <h1 className=\"mb-4 text-2xl\">회원가입</h1>\n      <form className=\"flex flex-col items-center\">\n        <label>\n          <span>이메일 : </span>\n          <input\n            value={loginInfo.email}\n            onChange={(e) => {\n              setLoginInfo({ ...loginInfo, email: e.target.value });\n              emailCheck(e);\n            }}\n            type=\"email\"\n            data-testid=\"email-input\"\n            className=\"w-40 mb-2 ml-3 border\"\n          />\n        </label>\n        <label>\n          <span>비밀번호 : </span>\n          <input\n            value={loginInfo.password}\n            onChange={(e) => {\n              setLoginInfo({ ...loginInfo, password: e.target.value });\n              passwordCheck(e);\n            }}\n            data-testid=\"password-input\"\n            type=\"password\"\n            className=\"w-40 border\"\n          />\n        </label>\n        <button\n          data-testid=\"signup-button\"\n          disabled={!(dis.email && dis.password)}\n          type=\"submit\"\n          onClick={signinHandler}\n          className=\"mt-4 bg-blue-500 w-36 disabled:bg-gray-400\"\n        >\n          회원가입\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default SigninPage;\n","/Users/a./Downloads/coding/pre-onboarding/client/src/components/pages/TodoPage.jsx",["50"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport TodoList from \"../TodoList\";\n\nfunction TodoPage() {\n  const navigate = useNavigate();\n  const [text, setText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"access_token\")) {\n      navigate(\"/signin\");\n    }\n  }, []);\n\n  const todoSubmit = async () => {\n    await axios.post(\n      \"https://www.pre-onboarding-selection-task.shop/todos\",\n      { todo: text },\n      {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"access_token\")}`,\n        },\n      }\n    );\n    axios\n      .get(\"https://www.pre-onboarding-selection-task.shop/todos\", {\n        headers: {\n          authorization: `bearer ${localStorage.getItem(\"access_token\")}`,\n        },\n      })\n      .then((res) => {\n        setTodos(res.data);\n      });\n  };\n\n  useEffect(() => {\n    axios\n      .get(\"https://www.pre-onboarding-selection-task.shop/todos\", {\n        headers: {\n          authorization: `bearer ${localStorage.getItem(\"access_token\")}`,\n        },\n      })\n      .then((res) => {\n        setTodos(res.data);\n      });\n  }, []);\n\n  return (\n    <div className=\"flex flex-col items-center mt-5\">\n      <div className=\"mb-2\">\n        <input\n          data-testid=\"new-todo-input\"\n          className=\"w-56 mr-2 border border-neutral-400\"\n          onChange={(e) => setText(e.target.value)}\n          value={text}\n        />\n        <button\n          data-testid=\"new-todo-add-button\"\n          className=\"px-2 border bg-slate-300 border-neutral-400\"\n          onClick={() => {\n            todoSubmit();\n            setText(\"\");\n          }}\n        >\n          추가\n        </button>\n      </div>\n      <ul>\n        {todos.map((todo) => (\n          <TodoList\n            key={todo.id}\n            id={todo.id}\n            todo={todo.todo}\n            isCompleted={todo.isCompleted}\n            setTodos={setTodos}\n          />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default TodoPage;\n","/Users/a./Downloads/coding/pre-onboarding/client/src/components/TodoList.jsx",[],[],{"ruleId":"51","severity":1,"message":"52","line":13,"column":6,"nodeType":"53","endLine":13,"endColumn":8,"suggestions":"54"},{"ruleId":"51","severity":1,"message":"55","line":37,"column":6,"nodeType":"53","endLine":37,"endColumn":8,"suggestions":"56"},{"ruleId":"51","severity":1,"message":"55","line":52,"column":6,"nodeType":"53","endLine":52,"endColumn":8,"suggestions":"57"},{"ruleId":"51","severity":1,"message":"55","line":16,"column":6,"nodeType":"53","endLine":16,"endColumn":8,"suggestions":"58"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'navigate' and 'path'. Either include them or remove the dependency array.","ArrayExpression",["59"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["60"],["61"],["62"],{"desc":"63","fix":"64"},{"desc":"65","fix":"66"},{"desc":"65","fix":"67"},{"desc":"65","fix":"68"},"Update the dependencies array to be: [navigate, path]",{"range":"69","text":"70"},"Update the dependencies array to be: [navigate]",{"range":"71","text":"72"},{"range":"73","text":"72"},{"range":"74","text":"72"},[304,306],"[navigate, path]",[809,811],"[navigate]",[1195,1197],[404,406]]